<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="JustTheTips.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="chkSaveInfoFiles.ToolTip" xml:space="preserve">
    <value>Saves each image information, such as tags, description, md5, etc. into files in the same directory.

Tags would be saved as tags.nfo, tags.graylisted.nfo, and tags.blacklisted.nfo
Pools would be saved as pools.nfo, pools.graylisted.nfo, and pools.blacklisted.nfo
Images would be saved as images.nfo, images.graylisted.nfo, and images.blacklisted.nfo</value>
  </data>
  <data name="chkTagsFavoriteCountAsTag.ToolTip" xml:space="preserve">
    <value>If checked, uses the favorite count as a tag (ex: "gay favcount:&gt;24" if the minimum is set at 25).
This widly decreases parsing time, and is recommended if you have less than 6 tags.
Only used if there are 5 or less tags being queried
If there are 5 tags and both minimum favorites and score are used, minimum favorites will be used.</value>
  </data>
  <data name="chkTagsIncludeScoreAsTag.ToolTip" xml:space="preserve">
    <value>If checked, uses the score count as a tag (ex: "gay score:&gt;24" if the minimum is set at 25).
This widly decreases parsing time, and is recommended if you have less than 6 tags.
Only used if there are 5 or less tags being queried
If there are 5 tags and both minimum favorites and score are used, minimum favorites will be used.
</value>
  </data>
  <data name="lbProtocols.Text" xml:space="preserve">
    <value>A protocol is used by browsers to run applications, usually with
arguments from websites. Using a protocol with this program is
useful if you want to download while browsing e621.

Using the protocol is optional, but it enables the ability to download
from the supported sites using your browser.</value>
  </data>
  <data name="rtbParams.Text" xml:space="preserve">
    <value>%md5%         =  The MD5 of the file
%id%          =  The ID of the post
%rating%      =  The rating of the post
%rating2%     =  The single letter of the rating
%artist%      =  The first artist in the array of the image
%ext%         =  The extension of the file
%fav_count%   =  The favorite count of the post
%score%       =  The user score of the post
%scoreup%     =  The amount of upvotes on the post
%scoredown%   =  The amount of downvotes on the post
%author%      =  The id of who submitted it to e621

(Pools only)
%poolname%    =  The name of the pool
%poolid%      =  The ID of the pool
%page%        =  The page number of the post in the pool

(Illegal characters)
The following characters won't be allowed to be used:
\    /    :    *    ?    "    &lt;    &gt;    |</value>
  </data>
  <data name="txtImageSchema.ToolTip" xml:space="preserve">
    <value>The schema used for the file name.
%md5%             = the MD5 of the file
%id%                 = the ID of the post
%rating%          = the rating of the post
%rating2%        = the single letter of the rating
%artist%           = the first artist in the artists array
%ext%              = the extension
%fav_count%   = the amount of favorites the post has
%score%          = the score of the post
%author%        = the user who submitted the post to e621</value>
  </data>
  <data name="txtTagSchema.ToolTip" xml:space="preserve">
    <value>The schema used for the file name.
%md5%             = the MD5 of the file
%id%                 = the ID of the post
%rating%          = the rating of the post
%rating2%        = the single letter of the rating
%artist%           = the first artist in the artists array
%ext%              = the extension
%fav_count%   = the amount of favorites the post has
%score%          = the score of the post
%author%        = the user who submitted the post to e621</value>
  </data>
  <data name="txtPoolSchema.ToolTip" xml:space="preserve">
    <value>The schema used for the file name.
%poolname%   = the name of the pool
%poolid%         = the id of the pool
%page%            = the page number (0 padded)
%md5%             = the MD5 of the file
%id%                 = the ID of the post
%rating%          = the rating of the post
%rating2%        = the single letter of the rating
%artist%           = the first artist in the artists array
%ext%              = the extension
%fav_count%   = the amount of favorites the post has
%score%          = the score of the post
%author%        = the user who submitted the post to e621</value>
  </data>
  <data name="lbPortable.Text" xml:space="preserve">
    <value>Aphrodite settings can be saved as an ini file.

Basically, all your current settings can be saved and used elsewhere without having to worry about the settings being different. The way it works is aphrodite will check for "aphridte.ini", and if one exists it will use that over system settings. You can specify to use the ini in the ini file. Values not in the ini will have defaults used

You can enable/disable the setting here. It will force-save the current settings, so don't spam it.</value>
  </data>
</root>